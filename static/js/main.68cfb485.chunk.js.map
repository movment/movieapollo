{"version":3,"sources":["components/Movie.js","routes/Home.js","routes/Detail.js","components/App.js","apollo.js","index.js"],"names":["Container","styled","div","Poster","props","bg","Movie","id","to","GET_MOVIES","gql","Header","header","Title","h1","Subtitle","h3","Loading","Movies","Home","useQuery","loading","data","movies","map","m","key","medium_cover_image","GET_MOVIE","Column","h4","Description","p","Detail","useParams","variables","movie","title","language","rating","description_intro","App","exact","path","component","client","ApolloClient","uri","ReactDOM","render","document","getElementById"],"mappings":"opBAIA,IAAMA,EAAYC,IAAOC,IAAV,KAQTC,EAASF,IAAOC,IAAV,KACc,SAACE,GAAD,OAAWA,EAAMC,MAiB5BC,EAVD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,GAAIF,EAAS,EAATA,GACnB,OACE,kBAACL,EAAD,KACE,kBAAC,IAAD,CAAMQ,GAAE,WAAMD,IACZ,kBAACJ,EAAD,CAAQE,GAAIA,O,ooCClBpB,IAAMI,EAAaC,YAAH,KASVV,EAAYC,IAAOC,IAAV,KAOTS,EAASV,IAAOW,OAAV,KAWNC,EAAQZ,IAAOa,GAAV,KAMLC,EAAWd,IAAOe,GAAV,KAIRC,EAAUhB,IAAOC,IAAV,KAOPgB,EAASjB,IAAOC,IAAV,KA2BGiB,EAlBF,WAAO,IAAD,IACSC,YAASX,GAA3BY,EADS,EACTA,QAASC,EADA,EACAA,KACjB,OACE,kBAAC,EAAD,KACE,kBAACX,EAAD,KACE,kBAACE,EAAD,oBACA,kBAACE,EAAD,wBAEDM,GAAW,kBAACJ,EAAD,mBACZ,kBAACC,EAAD,YACGI,QADH,IACGA,OADH,YACGA,EAAMC,cADT,aACG,EAAcC,KAAI,SAACC,GAAD,OACjB,kBAAC,EAAD,CAAOC,IAAKD,EAAElB,GAAIA,GAAIkB,EAAElB,GAAIF,GAAIoB,EAAEE,2B,ysCChE5C,IAAMC,EAAYlB,YAAH,KAeTV,EAAYC,IAAOC,IAAV,KAUT2B,EAAS5B,IAAOC,IAAV,KAKNW,EAAQZ,IAAOa,GAAV,KAKLC,EAAWd,IAAO6B,GAAV,KAKRC,EAAc9B,IAAO+B,EAAV,KAIX7B,EAASF,IAAOC,IAAV,KAIc,SAACE,GAAD,OAAWA,EAAMC,MAwB5B4B,EAnBA,WAAO,IAAD,UACX1B,EAAO2B,cAAP3B,GADW,EAEOa,YAASQ,EAAW,CAC5CO,UAAW,CAAE5B,QADPc,EAFW,EAEXA,QAASC,EAFE,EAEFA,KAGjB,OACE,kBAAC,EAAD,KACE,kBAACO,EAAD,KACE,kBAAC,EAAD,KAAQR,EAAU,aAAH,OAAkBC,QAAlB,IAAkBA,OAAlB,YAAkBA,EAAMc,aAAxB,aAAkB,EAAaC,OAC9C,kBAAC,EAAD,YACGf,QADH,IACGA,OADH,YACGA,EAAMc,aADT,aACG,EAAaE,SADhB,gBAC6BhB,QAD7B,IAC6BA,OAD7B,YAC6BA,EAAMc,aADnC,aAC6B,EAAaG,QAE1C,kBAACR,EAAD,YAAcT,QAAd,IAAcA,OAAd,YAAcA,EAAMc,aAApB,aAAc,EAAaI,oBAE7B,kBAAC,EAAD,CAAQnC,GAAE,OAAEiB,QAAF,IAAEA,OAAF,YAAEA,EAAMc,aAAR,aAAE,EAAaT,uBC3DhBc,MATf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOwB,KAAK,OAAOC,UAAWX,M,QCHrBY,EAJA,IAAIC,IAAa,CAC9BC,IAAK,4BCGPC,IAASC,OACP,kBAAC,IAAD,CAAgBJ,OAAQA,GACtB,kBAAC,EAAD,OAEFK,SAASC,eAAe,W","file":"static/js/main.68cfb485.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  height: 380px;\n  width: 100%;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  overflow: hidden;\n  border-radius: 7px;\n`;\n\nconst Poster = styled.div`\n  background-image: url(${(props) => props.bg});\n  height: 100%;\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Movie = ({ id, bg }) => {\n  return (\n    <Container>\n      <Link to={`/${id}`}>\n        <Poster bg={bg} />\n      </Link>\n    </Container>\n  );\n};\n\nexport default Movie;\n","import React from 'react';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport Movie from '../components/Movie';\n\nconst GET_MOVIES = gql`\n  {\n    movies {\n      id\n      medium_cover_image\n    }\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Header = styled.header`\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  height: 45vh;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nconst Title = styled.h1`\n  font-size: 60px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n\nconst Subtitle = styled.h3`\n  font-size: 35px;\n`;\n\nconst Loading = styled.div`\n  font-size: 18px;\n  opacity: 0.5;\n  font-weight: 500;\n  margin-top: 10px;\n`;\n\nconst Movies = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 25px;\n  width: 60%;\n  position: relative;\n  top: -50px;\n`;\n\nconst Home = () => {\n  const { loading, data } = useQuery(GET_MOVIES);\n  return (\n    <Container>\n      <Header>\n        <Title>Apollo 2020</Title>\n        <Subtitle>I love GraphQL</Subtitle>\n      </Header>\n      {loading && <Loading>Loading...</Loading>}\n      <Movies>\n        {data?.movies?.map((m) => (\n          <Movie key={m.id} id={m.id} bg={m.medium_cover_image} />\n        ))}\n      </Movies>\n    </Container>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { gql } from 'apollo-boost';\nimport { useQuery } from '@apollo/react-hooks';\nimport styled from 'styled-components';\n\nconst GET_MOVIE = gql`\n  query getMovie($id: Int!) {\n    movie(id: $id) {\n      title\n      medium_cover_image\n      language\n      rating\n      description_intro\n    }\n    suggestions(id: $id) {\n      id\n      medium_cover_image\n    }\n  }\n`;\nconst Container = styled.div`\n  height: 100vh;\n  background-image: linear-gradient(-45deg, #d754ab, #fd723a);\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  color: white;\n`;\n\nconst Column = styled.div`\n  margin-left: 10px;\n  width: 50%;\n`;\n\nconst Title = styled.h1`\n  font-size: 65px;\n  margin-bottom: 15px;\n`;\n\nconst Subtitle = styled.h4`\n  font-size: 35px;\n  margin-bottom: 10px;\n`;\n\nconst Description = styled.p`\n  font-size: 28px;\n`;\n\nconst Poster = styled.div`\n  width: 25%;\n  height: 60%;\n  background-color: transparent;\n  background-image: url(${(props) => props.bg});\n  background-size: cover;\n  background-position: center center;\n`;\n\nconst Detail = () => {\n  const { id } = useParams();\n  const { loading, data } = useQuery(GET_MOVIE, {\n    variables: { id }\n  });\n  return (\n    <Container>\n      <Column>\n        <Title>{loading ? 'Loading...' : data?.movie?.title}</Title>\n        <Subtitle>\n          {data?.movie?.language} Â· {data?.movie?.rating}\n        </Subtitle>\n        <Description>{data?.movie?.description_intro}</Description>\n      </Column>\n      <Poster bg={data?.movie?.medium_cover_image}></Poster>\n    </Container>\n  );\n};\n\nexport default Detail;\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from '../routes/Home';\nimport Detail from '../routes/Detail';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Route exact path=\"/\" component={Home}></Route>\n      <Route path=\"/:id\" component={Detail}></Route>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import ApolloClient from 'apollo-boost';\n\nconst client = new ApolloClient({\n  uri: 'https://movieql.now.sh/'\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport client from './apollo';\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}